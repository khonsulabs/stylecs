var searchIndex = JSON.parse('{\
"stylecs":{"doc":"A style component system to aide in building themable …","t":[0,3,11,11,11,11,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,4,13,13,3,12,3,12,3,12,12,12,8,10,10,10,3,12,12,4,13,13,8,16,16,10,11,8,11,11,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["style_sheet","StyleSheet","effective_style_for","with","push","merge_with","Rule","selector","hovered","focused","active","style","for_id","for_classes","when_hovered","when_not_hovered","when_focused","when_not_focused","when_active","when_not_active","with_styles","applies","Selector","Id","Classes","Id","0","Classes","0","State","hovered","focused","active","AnyStyleComponent","as_any","clone_to_style_component","merge_with","ColorPair","light_color","dark_color","SystemTheme","Light","Dark","FallbackComponent","Fallback","Value","value","has_fallback","StyleComponent","should_be_inherited","merge","Style","Surround","left","top","right","bottom","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","adapt_into_using","convert_into","convert_unclamped_into","try_convert_into","should_be_inherited","should_be_inherited","should_be_inherited","merge","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","with_alpha","themed_color","should_be_inherited","merge","has_fallback","new","push","with","get","get_with_fallback","get_or_default","merge_with","minimum_width","minimum_height","minimum_size","left","right","bottom","top"],"q":["stylecs","stylecs::style_sheet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stylecs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stylecs::style_sheet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stylecs","","","","","","","","","","","","","","stylecs::style_sheet","","","stylecs","stylecs::style_sheet","","","","","","stylecs","","","stylecs::style_sheet","","","","stylecs","","","","stylecs::style_sheet","","stylecs","stylecs::style_sheet","","","","stylecs","","","","","stylecs::style_sheet","","","","","","stylecs","stylecs::style_sheet","","stylecs","","","","","","","","","","","","","","","","","",""],"d":["Types for defining sets of rules.","A set of style [<code>Rule</code>]s to apply to a program.","Uses any [<code>Id</code>] and [<code>Classes</code>] components present in <code>style</code> …","Pushes <code>rule</code> and returns self. Builder-style …","Pushes <code>rule</code> into the collection. Rules pushed later will …","Merges <code>self</code> with <code>other</code>, such that the rules in <code>self</code> are …","A style rule.","Selecting styles by [<code>Id</code>] or [<code>Classes</code>].","If specified, only applies <code>style</code> if <code>hovered</code> matches […","If specified, only applies <code>style</code> if <code>focused</code> matches […","If specified, only applies <code>style</code> if <code>active</code> matches […","The style to apply if the criteria are met.","Returns a default <code>Rule</code> with <code>selector</code> of [<code>Id</code>] <code>id</code>.","Returns a default <code>Rule</code> with <code>selector</code> of [<code>Classes</code>] <code>classes</code>.","Builder-style function that sets [<code>Self::hovered</code>] to …","Builder-style function that sets [<code>Self::hovered</code>] to …","Builder-style function that sets [<code>Self::focused</code>] to …","Builder-style function that sets [<code>Self::focused</code>] to …","Builder-style function that sets [<code>Self::active</code>] to …","Builder-style function that sets [<code>Self::active</code>] to …","Builder-style function that passes the current value of […","Returns true if the rule should apply based on <code>state</code>.","A filter for a [<code>Rule</code>].","Matches when a [<code>Style</code>] has an [<code>Id</code>] component that equals …","Matches when a [<code>Style</code>] has a [<code>Classes</code>] component that …","A unique Id. Not inherited when merging styles.","","A list of class names. Not inherited when merging styles.","","An element state.","Whether the element is hovered or not.","Whether the element is focused or not.","Whether the element is active or not. For example, a push …","A [<code>StyleComponent</code>] that can be boxed for storage and …","Returns the style component as <code>Any</code>.","Returns boxed clone of the style component.","Returns boxed clone of the style component.","A pair of colors, one for each [<code>SystemTheme</code>] variant.","The color used when the current system theme is […","The color used when the current system theme is […","The theme variant for the system.","A light theme.","A dark theme.","A style component that has a fallback. An example could …","The style component to fall back to. If this is the root, …","The contained value of this component.","The contained value of the component.","Returns true if there is a fallback.","A style component. Implementors can be stored within <code>Style</code>…","Returns whether the component should be inherited. …","Merges <code>self</code> with <code>other</code>, if it makes sense to do so for …","A set of style components.","Measurements that surrouned a box/rect.","The left measurement.","The top measurement.","The right measurement.","The bottom measurementeturns a copy of the color pair, replacing each colors …","Returns color corresponding to <code>system_theme</code>.","Returns whether the component should be inherited. …","Merges <code>self</code> with <code>other</code>, if it makes sense to do so for …","Returns true if there is a fallback.","Returns a new style with no components.","Adds a component to this style. Any existing values of …","Adds a component to the style and returns it. Any …","Returns the style component of type <code>T</code>, if present.","Returns the style component of type <code>T</code>, if present.","Returns the style component of type <code>T</code>. If not present, …","Returns a new [<code>Style</code>] merging the components of <code>self</code> with …","Returns the minimum width that this surround will occupy.","Returns the minimum height that this surround will occupy.","Returns the minimum [<code>Size2D</code>] that this surround will …","Returns the left measurement using the unit-aware type: […","Returns the right measurement using the unit-aware type: […","Returns the bottom measurement using the unit-aware type: …","Returns the top measurement using the unit-aware type: […"],"i":[0,0,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,0,4,0,5,0,6,6,6,0,7,7,7,0,8,8,0,9,9,0,10,10,10,10,0,11,11,0,0,12,12,12,12,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,13,13,13,13,13,13,13,13,13,13,13,13,13,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,9,4,5,5,8,4,4,5,5,5,5,9,8,13,2,3,4,5,12,9,8,13,1,6,12,4,4,5,5,12,12,9,8,13,1,2,3,4,5,6,12,4,5,8,8,11,11,10,13,13,13,13,13,13,13,12,12,12,12,12,12,12],"f":[null,null,[[["state",3],["style",3]],["style",3]],[[["rule",3]]],[[["rule",3]]],[[]],null,null,null,null,null,null,[[["into",8],["id",3]]],[[["into",8],["classes",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fnonce",8]]],[[["state",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],[["box",3],["anystylecomponent",8]]],[[["anystylecomponent",8]],[["box",3],["anystylecomponent",8]]],null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["bool",15]],null,[[],["bool",15]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],[["result",4],["outofbounds",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["srgba",6]]],[[["string",3]]],[[["str",15]]],[[["string",3]]],[[["str",15]]],[[["vec",3],["string",3]]],[[["vec",3],["str",15]]],[[],["systemtheme",4]],[[],["colorpair",3]],[[]],[[],["rule",3]],[[],["selector",4]],[[],["id",3]],[[],["classes",3]],[[],["surround",3]],[[]],[[],["colorpair",3]],[[]],[[],["stylesheet",3]],[[],["state",3]],[[],["surround",3]],[[["id",3]],["bool",15]],[[["id",3]],["bool",15]],[[["classes",3]],["bool",15]],[[["classes",3]],["bool",15]],[[["surround",3]],["bool",15]],[[["surround",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["f32",15]]],[[["systemtheme",4]],["srgba",6]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[["clone",8],["stylecomponent",8]]],[[["clone",8],["stylecomponent",8]]],[[],["option",4]],[[],["option",4]],[[],[["default",8],["clone",8],["stylecomponent",8]]],[[["bool",15]]],[[],[["f32",15],["length",3]]],[[],[["f32",15],["length",3]]],[[],[["size2d",3],["f32",15]]],[[],[["length",3],["option",4]]],[[],[["length",3],["option",4]]],[[],[["length",3],["option",4]]],[[],[["length",3],["option",4]]]],"p":[[3,"StyleSheet"],[3,"Rule"],[4,"Selector"],[3,"Id"],[3,"Classes"],[3,"State"],[8,"AnyStyleComponent"],[3,"ColorPair"],[4,"SystemTheme"],[8,"FallbackComponent"],[8,"StyleComponent"],[3,"Surround"],[3,"Style"]]},\
"xtask":{"doc":"","t":[5],"n":["main"],"q":["xtask"],"d":[""],"i":[0],"f":[[[],["result",6]]],"p":[]}\
}');
initSearch(searchIndex);